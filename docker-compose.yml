version: '3.9'

name: authentication-service

services:
  postgres:
    container_name: 'postgres'
    image: 'postgres:latest'
    ports:
      - '8080:5432'
    environment:
      - POSTGRES_DB=authentication_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data

  api:
    container_name: 'api'
    build:
      context: './src/Authentication.API'
      dockerfile: 'Dockerfile'
    ports:
      - '5000:8080'
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana:/var/lib/grafana

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/var/lib/prometheus
        
networks:
  default:
    name: authentication-service

volumes:
  postgres:
  prometheus:
  grafana: